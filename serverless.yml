service: ${env:APP_NAME, 'tshAcademySlsWorkshops'}${env:STUDENT_NAME, 'student00'}
useDotenv: true
plugins:
  - serverless-step-functions-local
  - serverless-step-functions
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-log-retention

package:
  individually: true

custom:
  accountId: ${env:ACCOUNT_ID}
  studentId: ${env:STUDENT_NAME, 'student00'}
  logRetentionInDays: 30
  webpack:
    webpackConfig: "webpack.config.js"
    packager: "npm"
  stepFunctionsLocal:
    accountId: ${env:ACCOUNT_ID}
    region: us-east-1
  inputBucketName: tsh-academy-serverless-workshops-input-bucket-${env:STUDENT_NAME, 'student00'}
  extractedFilesBucketName: tsh-academy-serverless-workshops-extracted-files-${env:STUDENT_NAME, 'student00'}
provider:
  name: aws
  runtime: nodejs14.x
  region: ${env:AWS_LAMBDAS_REGION, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 30
  environment:
    APP_NAME: ${env:APP_NAME, 'tshAcademySlsWorkshops'}
    AWS_LAMBDAS_REGION: ${env:AWS_LAMBDAS_REGION, 'eu-west-1'}
    STUDENT_NAME: ${env:STUDENT_NAME, 'student00'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - states:StartExecution
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - sns:Publish
        - sns:Subscribe
      Resource:
        - "*"

functions:
  - ${file(functions/scan-file/function.yml)}
  - ${file(workflows/scan-cv-workflow/copy-file/function.yml)}
  - ${file(workflows/scan-cv-workflow/extract-text/function.yml)}

stepFunctions:
  stateMachines:
    ScanCvWorkflow: ${file(workflows/scan-cv-workflow/workflow.yml)}

resources:
  Outputs:
    ScanCvWorkflowStateMachine:
      Description: Scan CV workflow state machine Arn
      Value:
        Ref: ScanCvWorkflow${self:service}${opt:stage, 'dev'}
  Resources:
    scanSnsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}ScanFailedTopic
    inputBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.inputBucketName}
    extractedFilesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.extractedFilesBucketName}
    ScanCvWorkflowStateMachineRole: ${file(workflows/scan-cv-workflow/workflow.iam.yml)}
